/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

public class Lox {
  public String getGreeting() {
    return "Hello World!";
  }

  public static void main(String[] args) throws IOException {
    if (args.length > 1) {
      System.out.println("Usage: jlox [script]");
      // sysexits.h is what the codes are based on
      System.exit(64); 
    } else if (args.length == 1) {
      // Run from a file
      runFile(args[0]);
    } else {
      // REPL
      runPrompt();
    }
  }

  // Basically building a REPL (Read Evaluate Print and Loop console)
  private static void runPrompt() throws IOException {
    var input = new InputStreamReader(System.in);
    var reader = new BufferedReader(input);
    while(true){
      System.out.println("> ");
      String line = reader.readLine();
      // When you do ctrl-d, it's the same as read line =- null
      if (line == null) break;
      run(line);
    }
  }

  /**
   * 
   * 
   * @param path the path to the file to be read
   * @throws IOException if an I/O error occurs while reading the file
   */
  private static void runFile(String path) throws IOException {
    byte[] bytes = Files.readAllBytes(Paths.get(path));
    // UTF-8 is probably going to be the default charset
    run(new String(bytes, Charset.defaultCharset()));
  }


  private static void run(String codeLine) {
    // TODO Auto-generated method stub
    var scanner = new Scanner(codeLine);
    List<Token> tokens = scanner.scanTokens();

  }
}
